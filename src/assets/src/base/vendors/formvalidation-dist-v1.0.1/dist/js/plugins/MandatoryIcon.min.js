!function(e,n){typeof exports==='object'&&typeof module!=='undefined'?module.exports=n():typeof define==='function'&&define.amd?define(n):(e.FormValidation=e.FormValidation||{}, e.FormValidation.plugins=e.FormValidation.plugins||{}, e.FormValidation.plugins.MandatoryIcon=n())}(this,(function(){"use strict";var e=FormValidation.Plugin,n;!function(e){e.Invalid="Invalid";e.NotValidated="NotValidated";e.Valid="Valid";e.Validating="Validating"}(n||(n={}));var i=n,l=FormValidation.utils.classSet;class a extends e{constructor(e){super(e);this.removedIcons={[i.Valid]:'',[i.Invalid]:'',[i.Validating]:'',[i.NotValidated]:''};this.icons=new Map;this.elementValidatingHandler=this.onElementValidating.bind(this);this.elementValidatedHandler=this.onElementValidated.bind(this);this.elementNotValidatedHandler=this.onElementNotValidated.bind(this);this.iconPlacedHandler=this.onIconPlaced.bind(this);this.iconSetHandler=this.onIconSet.bind(this)}install(){this.core.on('core.element.validating',this.elementValidatingHandler).on('core.element.validated',this.elementValidatedHandler).on('core.element.notvalidated',this.elementNotValidatedHandler).on('plugins.icon.placed',this.iconPlacedHandler).on('plugins.icon.set',this.iconSetHandler)}uninstall(){this.icons.clear();this.core.off('core.element.validating',this.elementValidatingHandler).off('core.element.validated',this.elementValidatedHandler).off('core.element.notvalidated',this.elementNotValidatedHandler).off('plugins.icon.placed',this.iconPlacedHandler).off('plugins.icon.set',this.iconSetHandler)}onIconPlaced(e){let n=this.core.getFields()[e.field].validators,a=this.core.getElements(e.field);if(n&&n.notEmpty&&n.notEmpty.enabled!==!1&&a.length){this.icons.set(e.element,e.iconElement);let n=a[0].getAttribute('type').toLowerCase(),i='checkbox'===n||'radio'===n?[a[0]]:a;for(let n of i)this.core.getElementValue(e.field,n)===''&&l(e.iconElement,{[this.opts.icon]:!0})}this.iconClasses=e.classes;let t=this.opts.icon.split(' '),o={[i.Valid]:this.iconClasses.valid?this.iconClasses.valid.split(' '):[],[i.Invalid]:this.iconClasses.invalid?this.iconClasses.invalid.split(' '):[],[i.Validating]:this.iconClasses.validating?this.iconClasses.validating.split(' '):[]};Object.keys(o).forEach(e=>{let n=[];for(let i of t)o[e].indexOf(i)===-1&&n.push(i);this.removedIcons[e]=n.join(' ')})}onElementValidating(e){this.updateIconClasses(e.element,i.Validating)}onElementValidated(e){this.updateIconClasses(e.element,e.valid?i.Valid:i.Invalid)}onElementNotValidated(e){this.updateIconClasses(e.element,i.NotValidated)}updateIconClasses(e,n){let i=this.icons.get(e);i&&this.iconClasses&&(this.iconClasses.valid||this.iconClasses.invalid||this.iconClasses.validating)&&l(i,{[this.removedIcons[n]]:!1,[this.opts.icon]:!1})}onIconSet(e){let n=this.icons.get(e.element);n&&e.status===i.NotValidated&&this.core.getElementValue(e.field,e.element)===''&&l(n,{[this.opts.icon]:!0})}}return a}))